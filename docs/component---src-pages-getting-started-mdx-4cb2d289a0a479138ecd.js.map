{"version":3,"file":"component---src-pages-getting-started-mdx-4cb2d289a0a479138ecd.js","mappings":"uQAQaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,cACE,GAAM,kBACN,MAAS,CACP,SAAY,cAEb,aAAGC,WAAW,KACb,KAAQ,mBACR,aAAc,4BACd,UAAa,kBACZ,eAAKA,WAAW,IACf,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,gBAAMA,WAAW,MAChB,SAAY,UACZ,EAAK,oVAlBb,oBAoBA,mFACA,6BAAe,sBAAYA,WAAW,KAAvB,cAAf,MACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBADZ,yDAKL,8CAAgC,sBAAYA,WAAW,KAAvB,gBAAhC,MACA,mBACE,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,yGAEF,cAAIA,WAAW,OACb,aAAGA,WAAW,MAAd,aAAgC,sBAAYA,WAAW,KAAvB,wBAAhC,yBACA,eAAKA,WAAW,OAAK,gBAAMA,WAAW,MAClC,UAAa,eADI,oEAIrB,aAAGA,WAAW,MAAd,iGAGJ,oDACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBADZ,8BAIL,gCAAkB,aAAGA,WAAW,IAC5B,KAAQ,oBADM,iBAAlB,4BAGA,cACE,GAAM,MACN,MAAS,CACP,SAAY,cAEb,aAAGA,WAAW,KACb,KAAQ,OACR,aAAc,gBACd,UAAa,kBACZ,eAAKA,WAAW,IACf,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,gBAAMA,WAAW,MAChB,SAAY,UACZ,EAAK,oVAlBb,QAoBA,+FACA,cACE,GAAM,MACN,MAAS,CACP,SAAY,cAEb,aAAGA,WAAW,KACb,KAAQ,OACR,aAAc,gBACd,UAAa,kBACZ,eAAKA,WAAW,IACf,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,gBAAMA,WAAW,MAChB,SAAY,UACZ,EAAK,oVAlBb,QAoBA,0CAA4B,sBAAYA,WAAW,KAAvB,UAA5B,iCACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBADZ,8BAIL,kIACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBADZ,8BAIL,iCAAmB,sBAAYA,WAAW,KAAvB,UAAnB,iDACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBADZ,0CAIL,gKACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBADZ,+CAIL,iJACA,yCAA2B,sBAAYA,WAAW,KAAvB,iBAA3B,+NACA,0CACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,+TAeL,cACE,GAAM,WACN,MAAS,CACP,SAAY,cAEb,aAAGA,WAAW,KACb,KAAQ,YACR,aAAc,qBACd,UAAa,kBACZ,eAAKA,WAAW,IACf,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,gBAAMA,WAAW,MAChB,SAAY,UACZ,EAAK,oVAlBb,aAoBA,qCACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,kkBAuBL,gGACA,cACE,GAAM,YACN,MAAS,CACP,SAAY,cAEb,aAAGA,WAAW,KACb,KAAQ,aACR,aAAc,sBACd,UAAa,kBACZ,eAAKA,WAAW,IACf,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,gBAAMA,WAAW,MAChB,SAAY,UACZ,EAAK,oVAlBb,cAoBA,8CAAgC,sBAAYA,WAAW,KAAvB,qCAAhC,8KACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,eADZ,iHAYL,gCAAkB,sBAAYA,WAAW,KAAvB,mCAAlB,8DACA,uDAAyC,sBAAYA,WAAW,KAAvB,gBAAzC,2DACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBADZ,wDAQTJ,EAAWK,gBAAiB,G,qBC5Ob,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,E","sources":["webpack://@monodeploy/gatsby/./src/pages/getting-started.mdx","webpack://@monodeploy/gatsby/../.yarn/cache/@babel-runtime-npm-7.18.6-6a59ef0d54-8b707b64ae.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/monodeploy/monodeploy/gatsby/src/components/Layout.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"getting-started\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#getting-started\",\n        \"aria-label\": \"getting started permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Getting Started`}</h2>\n    <p>{`A minimum Node version of v14.0.0 and Yarn Berry is required.`}</p>\n    <p>{`Install `}<inlineCode parentName=\"p\">{`monodeploy`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add -D monodeploy\nyarn monodeploy --dry-run\n`}</code></pre>\n    <p>{`Edit your project's root `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{`:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Set \"workspaces\": `}{`[\"packages/*\"]`}{` (you can use a different glob to match your monorepo layout)`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a `}<inlineCode parentName=\"p\">{`monodeploy.config.js`}</inlineCode>{` file and set it to:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`module.exports = { preset: 'monodeploy/preset-recommended' }\n`}</code></pre>\n        <p parentName=\"li\">{`You'll be extending this file as you make changes to your project's publish configuration.`}</p>\n      </li>\n    </ol>\n    <p>{`For help with the CLI options:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn monodeploy --help\n`}</code></pre>\n    <p>{`or see the `}<a parentName=\"p\" {...{\n        \"href\": \"../configuration\"\n      }}>{`Configuration`}</a>{` page for more details.`}</p>\n    <h3 {...{\n      \"id\": \"api\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#api\",\n        \"aria-label\": \"api permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`API`}</h3>\n    <p>{`Monodeploy supports both a Command Line Interface, as well as a Node API.`}</p>\n    <h4 {...{\n      \"id\": \"cli\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h4\" {...{\n        \"href\": \"#cli\",\n        \"aria-label\": \"cli permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`CLI`}</h4>\n    <p>{`For the CLI, use the `}<inlineCode parentName=\"p\">{`--help`}</inlineCode>{` flag for a list of options.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn monodeploy --help\n`}</code></pre>\n    <p>{`If you are okay with the defaults, you can go ahead and add a call to monodeploy to your CI's publish stage:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn monodeploy --push\n`}</code></pre>\n    <p>{`If you omit `}<inlineCode parentName=\"p\">{`--push`}</inlineCode>{`, you can manually push the tags on success:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn monodeploy && git push --tags\n`}</code></pre>\n    <p>{`Or to give things a try first, run monodeploy in dry run mode with verbose logging. Dry run mode won't modify the remote registry, or git.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn monodeploy --dry-run --log-level 0\n`}</code></pre>\n    <p>{`The CLI provides a few sensible defaults, however if using the Node API, you will have to provide all relevant information.`}</p>\n    <p>{`You can also pass a `}<inlineCode parentName=\"p\">{`--config-file`}</inlineCode>{` flag to load options from a configuration file. The file should export an object matching the MonodeployConfiguration interface (with all properties as optional). CLI flags take precedence over the configuration file.`}</p>\n    <p>{`Example config file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`module.exports = {\n    dryRun: false,\n    git: {\n        commitSha: 'HEAD',\n        remote: 'origin',\n        push: true,\n    },\n    conventionalChangelogConfig: '@tophat/conventional-changelog-config',\n    access: 'infer',\n    persistVersions: false,\n    changesetIgnorePatterns: ['**/*.test.js'],\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"node-api\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h4\" {...{\n        \"href\": \"#node-api\",\n        \"aria-label\": \"node api permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Node API`}</h4>\n    <p>{`To use the API:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import type { MonodeployConfiguration }  from '@monodeploy/types'\nimport monodeploy from '@monodeploy/node'\n\ntry {\n    const config: MonodeployConfiguration = {\n        cwd: process.cwd(),\n        dryRun: false,\n        git: {\n            commitSha: 'HEAD',\n            remote: 'origin',\n            push: true,\n        },\n        conventionalChangelogConfig: '@tophat/conventional-changelog-config',\n        access: 'infer',\n        persistVersions: false,\n    }\n    const changeset = await monodeploy(config)\n} catch (err) {\n    console.error(err)\n}\n`}</code></pre>\n    <p>{`Note that configuration presets are not supported when using the Node API.`}</p>\n    <h3 {...{\n      \"id\": \"changelog\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#changelog\",\n        \"aria-label\": \"changelog permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Changelog`}</h3>\n    <p>{`If you choose to use the `}<inlineCode parentName=\"p\">{`--changelog-filename CHANGELOG.md`}</inlineCode>{` flag or related API config property, in your CHANGELOG.md file you'll need to insert a marker to let monodeploy know where to insert the changelog entries. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-md\"\n      }}>{`# My Example Changelog\n\nSome blurb here.\n\n<!-- MONODEPLOY:BELOW -->\n\n## v1.0.0\n\nSome entry.\n`}</code></pre>\n    <p>{`The marker `}<inlineCode parentName=\"p\">{`<!-- MONODEPLOY:BELOW -->`}</inlineCode>{` must match exactly. It is whitespace and case-sensitive.`}</p>\n    <p>{`You can use the template variable `}<inlineCode parentName=\"p\">{`<packageDir>`}</inlineCode>{` to create individual changelogs per package, like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`--changelog-filename \"<packageDir>/CHANGELOG.md\"\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}